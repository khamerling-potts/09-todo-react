{"version":3,"sources":["Todo.js","NewTodo.js","App.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","retrieve","bind","assertThisInitialized","react_default","a","createElement","id","console","log","style","marginRight","backgroundColor","text","cssFloat","todo","update","remove","_this2","fetch","method","headers","x-api-key","Content-type","then","response","json","responseData","setState","todos","_this3","completed","_this4","Component","NewTodo","className","onSubmit","addTodo","htmlFor","value","input","onChange","type","placeholder","App","event","target","state","src_NewTodo","newTodo","map","src_Todo","key","preventDefault","self","data","createRequest","XMLHttpRequest","onreadystatechange","readyState","status","toConsumableArray","concat","JSON","parse","responseText","open","setRequestHeader","send","stringify","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9c8a19f2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Todo extends Component {\n    constructor(props){\n        super(props)\n        this.retrieve = this.retrieve.bind(this);\n        //this.update = this.update.bind(this);\n        //this.remove = this.remove.bind(this);\n        //this.deleteClicked = this.deleteClicked.bind(this);\n        }\n    \n   render() {\n       return (\n           <div id = {this.props.id}>\n               {console.log(this.props.id)}\n              {/* {console.log(this.id)} */}\n           {/* <article id=\"{this.props.id}\" className=\"todo\">\n               <button className=\"check\"></button>\n               <p>{this.props.text}</p>\n           </article> */}\n           \n               <li>\n                  {/* Make the ids a normal number instead of id */}\n                  <button id={this.props.id} style={{marginRight: '10px', backgroundColor: '#ceffc9'}}>Done</button>\n                  {this.props.text}\n                  <button id={this.props.id} style={{cssFloat: 'right', backgroundColor: '#ffbdaf'}}>Delete</button>\n                </li>\n           </div>\n       );\n   }\n\n   deleteClicked(todo){\n    this.retrieve(todo);\n    this.update(todo);\n    this.remove(todo);\n  }\n\n   retrieve(todo){\n    //const self = this;\n    fetch('https://cse204.work/todos/'+todo.id,{\n      method: 'GET',\n      headers:{\n        'x-api-key': 'f32d02-3f32cc-c59414-4b288d-c7f6a6',\n        'Content-type': 'application/json'\n      }\n    })\n      .then(response=>response.json())\n      .then((responseData)=>{\n        this.setState({todos: responseData});\n      })\n  }\n\n  update(todo){\n    //const self = this;\n    todo.completed = true;\n    fetch('https://cse204.work/todos/'+todo.id,{\n      method: 'PUT',\n      headers:{\n        'x-api-key': 'f32d02-3f32cc-c59414-4b288d-c7f6a6',\n        'Content-type': 'application/json'\n      }\n    })\n    .then(response=>response.json())\n      .then((responseData)=>{\n        this.setState({todos: responseData});\n      })\n  }\n\n  remove(todo){\n    //const self = this;\n    fetch('https://cse204.work/todos/'+todo.id,{\n      method: 'DELETE',\n      headers:{\n        'x-api-key': 'f32d02-3f32cc-c59414-4b288d-c7f6a6',\n        'Content-type': 'application/json'\n      }\n    })\n    .then(response=>response.json())\n      .then((responseData)=>{\n        this.setState({todos: responseData});\n      })\n  }\n}\n\nexport default Todo;","import React, { Component } from 'react';\nimport './App.css';\n\nclass NewTodo extends Component {\n   render() {\n       return (\n        <div>\n            <div className=\"row\">\n            <div className=\"col-sm-12 addbar\">\n            <form className=\"addform\" id=\"addform\" onSubmit = {this.props.addTodo}>\n                <label htmlFor=\"add\" className=\"formlabel\">To Do List</label>\n                <div className=\"input-group\">\n                <input value={this.props.input || ''} onChange={this.props.onChange} type=\"text\" className=\"form-control\" id=\"add\" placeholder=\"New item\"/>\n                <div className=\"input-group-addon\">\n                    <input type = \"submit\" value=\"Add Item\" className = \"addbutton\"></input>\n                </div>\n                </div>\n            </form>\n            </div>\n            </div>\n        {/* <article id=\"{this.props.id}\" className=\"todo\">\n            <button className=\"check\"></button>\n            <p>{this.props.text}</p>\n        </article> */}\n\n        </div>\n       );\n   }\n}\n\nexport default NewTodo;","import React, { Component } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport NewTodo from './NewTodo';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.addTodo = this.addTodo.bind(this);\n    \n    //this.componentDidMount = this.componentDidMount.bind(this);\n    this.state = {\n      todos: []\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* <NewTodo addTodo={this.addTodo} />\n        <NewTodo newTodo={this.newTodo} onChange={this.onChange} input={this.state.input} /> */}\n        <div className=\"App\">\n          <h1>Kyra Hamerling-Potts' ToDo App</h1>\n          </div>\n          <section id=\"todos\">\n            <NewTodo addTodo={this.addTodo} newTodo={this.newTodo} onChange={this.onChange} input={this.state.input}/>\n            <ul id=\"todoList\">\n              {console.log(this.state.todos)}\n            {this.state.todos.map((todo) =>\n              \n              // {console.log(todo.id)},\n              <Todo key={todo.id} id={todo.id} text={todo.text} />\n              \n            )}\n            </ul>\n          </section>\n      </div>  \n    );\n  }\n\n  onChange = (event) =>{\n    // Set the state to the value of the input\n    const self = this;\n    //{console.log(event.target.value)}\n    self.setState({\n      input: event.target.value \n    });\n  }\n\n  addTodo(event){\n    event.preventDefault();\n    const self = this;\n    const newTodoText = self.state.input;\n   //{console.log(event.target.id)}\n    //{console.log(this.state.input)}\n    var data = {\n      text: newTodoText\n    }\n\n    {console.log(data)}\n    //var self = this;\n    var createRequest = new XMLHttpRequest();\n    createRequest.onreadystatechange = function () {\n    if (this.readyState === 4 && this.status === 200) {\n      // save new Todo to state\n      self.setState({\n        todos: [...self.state.todos, JSON.parse(this.responseText)]\n      })\n      // clear the input field\n      self.setState({input: ''});\n  }     \n}\n  createRequest.open(\"POST\", \"https://cse204.work/todos\", true);\n  createRequest.setRequestHeader(\"Content-type\", \"application/json\");\n  createRequest.setRequestHeader(\"x-api-key\", \"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n  createRequest.send(JSON.stringify(data));\n    // fetch('https://cse204.work/todos',{\n    //   method: 'POST',\n    //   headers:{\n    //     'x-api-key': 'f32d02-3f32cc-c59414-4b288d-c7f6a6',\n    //     'Content-type': 'application/json'\n    //   }\n    // })\n    // this.setState({\n    //   todos: [...this.state.todos, newItem]\n    // })\n  }\n\n  \n\n  componentDidMount() {\n    {console.log(\"componentdidmount activated\")}\n    const self = this;\n    // // AJAX goes here\n    // var createRequest = new XMLHttpRequest();\n    // createRequest.onreadystatechange = function () {\n    // if (this.readyState === 4 && this.status === 200) {\n    //   {console.log(\"ajax successful\")}\n    //   // If AJAX successful, parse the JSON and save to state\n    //   var todos = JSON.parse(this.responseText);\n    //   self.setState({todos: todos});\n    //   {console.log(\"Requested todos: \" + self.state.todos)}\n    // }\n    \n    // }\n    // createRequest.open(\"GET\", \"https://cse204.work/todos\", true);\n    // createRequest.setRequestHeader(\"x-api-key\",\"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n    // createRequest.send();\n\n    // Make API call to fetch existing Todos.\n    fetch('https://cse204.work/todos',{\n      \"method\": \"GET\",\n      \"headers\":{\n        'x-api-key': 'f32d02-3f32cc-c59414-4b288d-c7f6a6',\n        //'Content-type': 'application/json'\n      }\n    })\n    //I used Free Code Camp to understand processing response data\n      .then(response=>response.json())\n      .then((responseData)=>{\n        this.setState({todos: responseData});\n      })\n  //     .then(function (response) {\n  //       self.setState({todos: JSON.parse(response)});\n  //     }\n  //  )\n  }\n  \n  // componentWillUpdate() {\n  //   // Make modifications like re-ordering array \n  //   const toOrder = this.state.todos\n  //   toOrder.sort()\n  //   this.setState({todos: toOrder});\n  // }\n  \n  // componentWillUnmount() {\n  //   // clean-up\n  // }\n\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// //I used the api documentation provided to help with javascript\n\n// document.addEventListener(\"DOMContentLoaded\", function(){\n\n//     //List all todos when page loads\n//     function listAllToDos(){\n//         var xhttp = new XMLHttpRequest();\n    \n//         xhttp.onreadystatechange = function() {\n//             if (this.readyState == 4 && this.status == 200) {\n//                 var todos = JSON.parse(this.responseText);\n//                 console.log(todos);\n//                 for(var i=0; i<todos.length; i++){\n//                     //display all list items with close buttons\n//                     var li = document.createElement(\"li\");\n                    \n//                     var checkbox = document.createElement(\"button\");\n//                     checkbox.innerHTML = \"Done\";\n//                     checkbox.id=i;\n//                     checkbox.style.marginRight = \"10px\";\n//                     checkbox.style.backgroundColor = \"#ceffc9\";\n//                     li.appendChild(checkbox);\n    \n//                     var todoLabel = document.createElement(\"label\");\n//                     todoLabel.id = i;\n//                     todoLabel.innerHTML = todos[i].text;\n//                     li.id=todos[i].id;\n//                     li.appendChild(todoLabel);\n    \n//                     var button = document.createElement(\"button\");\n//                     button.innerHTML = \"Delete\";\n//                     button.style.cssFloat = \"right\";\n//                     button.style.backgroundColor = \"#ffbdaf\";\n//                     li.appendChild(button);\n//                     button.id=i;\n    \n//                     if (todos[i][\"completed\"] == true){                      \n//                         todoLabel.innerHTML=todos[i].text.strike();\n//                         update(todos[i].id);\n//                     }\n//                     checkbox.addEventListener(\"click\", function(event){\n//                        var strikeText = document.getElementById(event.target.id).parentElement.childNodes[1];\n                      \n//                         strikeText.innerHTML=todos[event.target.id].text.strike();\n//                         console.log(todos[event.target.id].text.strike());\n//                         todos[event.target.id].completed = \"true\";\n                        \n//                     });\n//                     button.addEventListener(\"click\", function(event){\n//                         var id = todos[event.target.id].id;\n    \n//                         //call retrieve, which gets the todo\n//                         retrieve(id);\n    \n//                         //call update, which sends a put request\n//                         update(id);\n                        \n//                         //call remove function, which deletes the todo\n//                         remove(id);\n//                     });\n//                     document.getElementById(\"todoList\").appendChild(li);\n//                 }\n//             }\n//     };\n    \n//     xhttp.open(\"GET\", \"https://cse204.work/todos\", true);\n//     xhttp.setRequestHeader(\"x-api-key\",\"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n//     xhttp.send();\n//     }\n    \n//     listAllToDos();\n    \n    \n    \n    \n//     //Make new todo when form is submitted\n//     document.getElementById(\"addform\").addEventListener(\"submit\", (event)=>{\n//         event.preventDefault();\n//         // Setting variable for form input (get from HTML form)\n//         var data = {\n//            text: document.getElementById(\"add\").value\n//         }\n    \n//         // Initalize AJAX Request\n//         var xhttp2 = new XMLHttpRequest();\n    \n//         // Response handler\n//         xhttp2.onreadystatechange = function() {\n    \n//             // Wait for readyState = 4 & 200 response\n//             if (this.readyState == 4 && this.status == 200) {\n    \n//                 // parse JSON response\n//                 var todo = JSON.parse(this.responseText);\n//                 //w3schools helped me figure out how to create a new list item\n//                 var li = document.createElement(\"li\");\n//                 var checkbox = document.createElement(\"button\");\n//                 checkbox.innerHTML = \"Done\";\n//                 checkbox.style.marginRight = \"10px\";\n//                 checkbox.style.backgroundColor = \"#ceffc9\";\n//                 li.appendChild(checkbox);\n                \n//                 var todoLabel = document.createElement(\"label\");\n    \n//                 todoLabel.innerHTML = todo.text;\n//                 li.appendChild(todoLabel);\n//                 var button = document.createElement(\"button\");\n//                 button.innerHTML = \"Delete\";\n//                 button.style.cssFloat = \"right\";\n//                 button.style.backgroundColor = \"#ffbdaf\";\n//                 li.id=todo.id;\n           \n//                 if (todo[\"completed\"] == true){                  \n//                     todoLabel.innerHTML=todo.text.strike();\n//                     todo.completed = \"true\";\n//                 }\n//                 checkbox.addEventListener(\"click\", function(event){\n                   \n//                     var strikeText = checkbox.parentElement.childNodes[1];\n                      \n//                     strikeText.innerHTML=todo.text.strike();\n//                     todoLabel.innerHTML=todo.text.strike();\n//                     update(todo.id);\n                    \n//                 });\n//                     button.addEventListener(\"click\", function(event){\n//                         var id = todo.id;\n    \n//                         //call retrieve, which gets the todo\n//                         retrieve(id);\n    \n//                         //call update, which sends a put request\n//                         update(id);\n                        \n//                         //call remove function, which deletes the todo\n//                         remove(id);\n//                     });\n//                 li.appendChild(button);\n//                 document.getElementById(\"todoList\").appendChild(li);\n                \n                \n    \n//                 console.log(todo);\n    \n//             } else if (this.readyState == 4) {\n    \n//                 // this.status !== 200, error from server\n//                 console.log(this.responseText);\n    \n//             }\n//         };\n    \n//         xhttp2.open(\"POST\", \"https://cse204.work/todos\", true);\n    \n//         xhttp2.setRequestHeader(\"Content-type\", \"application/json\");\n//         xhttp2.setRequestHeader(\"x-api-key\", \"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n//         xhttp2.send(JSON.stringify(data));\n        \n//         document.getElementById(\"addform\").reset();\n//     });\n    \n    \n//     //retrieves info for todo, calls GET\n//     function retrieve(id){\n        \n//         // Initalize AJAX Request\n//         var xhttp5 = new XMLHttpRequest();\n    \n//         // Response handler\n//         xhttp5.onreadystatechange = function() {\n    \n//             // Wait for readyState = 4 & 200 response\n//             if (this.readyState == 4 && this.status == 200) {\n    \n//                 // parse JSON response\n//                 var todo = JSON.parse(this.responseText);\n                \n                \n//                 console.log(todo);\n    \n//             } else if (this.readyState == 4) {\n    \n//                 // this.status !== 200, error from server\n//                 console.log(this.responseText);\n    \n//             }\n//         };\n    \n//         console.log(id);\n//         xhttp5.open(\"GET\", \"https://cse204.work/todos/\"+id, true);\n    \n//         xhttp5.setRequestHeader(\"Content-type\", \"application/json\");\n//         xhttp5.setRequestHeader(\"x-api-key\", \"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n//         xhttp5.send();\n    \n//     }\n    \n//     function update(id){\n//         // Including json object\n//         var data = {\n//             completed: true\n//         }\n//          // Initalize AJAX Request\n//          var xhttp3 = new XMLHttpRequest();\n     \n//          // Response handler\n//          xhttp3.onreadystatechange = function() {\n     \n//              // Wait for readyState = 4 & 200 response\n//              if (this.readyState == 4 && this.status == 200) {\n     \n//                  // parse JSON response\n//                  var todo = JSON.parse(this.responseText);\n                 \n     \n//                  console.log(todo);\n     \n//              } else if (this.readyState == 4) {\n     \n//                  // this.status !== 200, error from server\n//                  console.log(this.responseText);\n     \n//              }\n//          };\n     \n//          xhttp3.open(\"PUT\", \"https://cse204.work/todos/\"+id, true);\n     \n//          xhttp3.setRequestHeader(\"Content-type\", \"application/json\");\n//          xhttp3.setRequestHeader(\"x-api-key\", \"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n//          xhttp3.send(JSON.stringify(data));\n//     }\n    \n//     function remove(id){\n//          // Initalize AJAX Request\n//          var xhttp4 = new XMLHttpRequest();\n        \n//          // Response handler\n//          xhttp4.onreadystatechange = function() {\n     \n//              // Wait for readyState = 4 & 200 response\n//              if (this.readyState == 4 && this.status == 200) {\n//                 document.getElementById(id).remove();\n//              } else if (this.readyState == 4) {\n//                  // this.status !== 200, error from server\n//                  console.log(this.responseText);\n    \n                 \n     \n//              }\n//          };\n     \n//          xhttp4.open(\"DELETE\", \"https://cse204.work/todos/\"+id, true);\n     \n//          xhttp4.setRequestHeader(\"Content-type\", \"application/json\");\n//          xhttp4.setRequestHeader(\"x-api-key\", \"f32d02-3f32cc-c59414-4b288d-c7f6a6\");\n//          xhttp4.send();\n    \n         \n//     }\n    \n    \n//     });\n    \n    \n    "],"sourceRoot":""}